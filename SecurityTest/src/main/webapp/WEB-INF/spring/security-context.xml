<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 로그인 성공 후 처리하는 담당자 -->
	<bean id="customLoginSuccess" class="com.test.security.CustomLoginSuccessHandler"></bean>
	
	<!-- 암호 인코딩 객체 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<!-- 사용자 로그인 객체 -->
	<bean id="customUserDetailsService" class="com.test.security.CustomUserDetailsService"></bean>
	
	<!-- 기본적인 폼 로그인 방식으로 보안을 구성하겠다는 뜻 -->
	<security:http>
	
		<!-- 어떤 경로에 어떤 권한을 줄 지 정하는 코드 -->
		<security:intercept-url pattern="/index.do" access="permitAll" />
		<security:intercept-url pattern="/member/member.do" access="hasRole('ROLE_MEMBER')" />
		
		<!-- 이곳에 명시되지 않은 URI는 모든 사용자가 접근 가능 -->
		<security:intercept-url pattern="/admin/admin.do" access="hasRole('ROLE_ADMIN')" />
		
		<!-- 빌트인 로그인 페이지 호출 -->
		<!-- <security:form-login/> -->
		
		<!-- 사용자 정의 로그인 페이지 호출 -->
		<!-- <security:form-login login-page="/auth/mylogin.do" /> -->
		<security:form-login login-page="/auth/mylogin.do" authentication-success-handler-ref="customLoginSuccess" />
		
		<!-- 로그아웃 처리 -->
		<security:logout logout-url="/auth/mylogout.do" logout-success-url="/index.do" invalidate-session="true" />
		
		<!-- 403 페이지 처리 -->
		<security:access-denied-handler error-page="/auth/accesserror.do" />
		
	</security:http>
	
	<!-- 계정 관리 매니저(회원 아이디/비번/권한등급..) -->
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="hong" password="{noop}1111" authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}1111" authorities="ROLE_ADMIN, ROLE_MEMBER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
